/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package SistemaBancario;

import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import javax.swing.JOptionPane;
import java.util.List;
import static javax.swing.JOptionPane.showMessageDialog;

/**
 *
 * @authors GRR2019 ...
 */
public class SistemaBancario extends javax.swing.JFrame {

    private ClienteTableModel clienteTableModel = new ClienteTableModel();
    private ClienteTableModel clienteTableModelOperacao = new ClienteTableModel();
    int linhaClicada = -1;
    int linhaClicadaOp = -1;
    int linhaClicadaMv = -1;
    int setIdCliente = 0;
    int setIdConta = 0;
    Cliente clienteSelecionado = new Cliente();
    Cliente clienteEmOperacao = null;
    Cliente clienteSelecionadoMov = new Cliente();
    public static List<Cliente> clientes = new ArrayList();
    public static List<Endereco> enderecos = new ArrayList();
    DecimalFormat formato = new DecimalFormat("#.##");

    /**
     * Creates new form SistemaBancario
     */
    public SistemaBancario() {
        initComponents();
        invisibleAcc();
        clienteTableModel.setListaClientes(clientes);
        clienteTableModelOperacao.setListaClientes(clientes);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelGeral = new javax.swing.JTabbedPane();
        panelManterClientes = new javax.swing.JTabbedPane();
        Clientes = new javax.swing.JPanel();
        btnRemoverCliente = new javax.swing.JButton();
        Clientes_Geral = new javax.swing.JScrollPane();
        TabelaClienteGeral = new javax.swing.JTable();
        labelListaClientes = new javax.swing.JLabel();
        btnAtualizar = new javax.swing.JButton();
        boxClassificar = new javax.swing.JComboBox<>();
        labelPesquisar = new javax.swing.JLabel();
        txtPesquisar = new javax.swing.JTextField();
        labelClassificar = new javax.swing.JLabel();
        labelDadosPessoaisTit_Geral = new javax.swing.JLabel();
        labelNome_Geral = new javax.swing.JLabel();
        textNome_Geral = new javax.swing.JTextField();
        labelSobrenome_Geral = new javax.swing.JLabel();
        textSobrenome_Geral = new javax.swing.JTextField();
        labelRenda_Geral = new javax.swing.JLabel();
        textRenda_Geral = new javax.swing.JTextField();
        labelRG_Geral = new javax.swing.JLabel();
        textRG_Geral = new javax.swing.JTextField();
        labelCPF_Geral = new javax.swing.JLabel();
        textCPF_Geral = new javax.swing.JTextField();
        labelEnderecoTit_Geral = new javax.swing.JLabel();
        labelCEP_Geral = new javax.swing.JLabel();
        textCEP_Geral = new javax.swing.JTextField();
        btnBuscaCEP_Geral = new javax.swing.JButton();
        labelLogradouro_Geral = new javax.swing.JLabel();
        textLogradouro_Geral = new javax.swing.JTextField();
        labelNumeroPredial_Geral = new javax.swing.JLabel();
        textNumeroPredial_Geral = new javax.swing.JTextField();
        textUF_Geral = new javax.swing.JTextField();
        labelUF_Geral = new javax.swing.JLabel();
        textCidade_Geral = new javax.swing.JTextField();
        labelCidade_Geral = new javax.swing.JLabel();
        textBairro_Geral = new javax.swing.JTextField();
        labeBairro_Geral = new javax.swing.JLabel();
        textComplemento_Geral = new javax.swing.JTextField();
        labelComplemento_Geral = new javax.swing.JLabel();
        btnLimparEnd_Geral = new javax.swing.JButton();
        comboPesquisarPor = new javax.swing.JComboBox<>();
        CadC = new javax.swing.JPanel();
        labelNome_Cadc = new javax.swing.JLabel();
        labelSobrenome_Cadc = new javax.swing.JLabel();
        labelRG_Cadc = new javax.swing.JLabel();
        labelCPF_CadC = new javax.swing.JLabel();
        labelDadosPessoaisTit_Cadc = new javax.swing.JLabel();
        textNome_CadC = new javax.swing.JTextField();
        textSobrenome_CadC = new javax.swing.JTextField();
        textRG_CadC = new javax.swing.JTextField();
        textCPF_CadC = new javax.swing.JTextField();
        labelEnderecoTit_CadC = new javax.swing.JLabel();
        labelCEP_CadC = new javax.swing.JLabel();
        labelLogradouro_CadC = new javax.swing.JLabel();
        labelComplemento_CadC = new javax.swing.JLabel();
        textCEP_CadC = new javax.swing.JTextField();
        btnBuscaCEP = new javax.swing.JButton();
        textLogradouro_CadC = new javax.swing.JTextField();
        labelNumeroPredial_CadC = new javax.swing.JLabel();
        textNumeroPredial_CadC = new javax.swing.JTextField();
        textComplemento_CadC = new javax.swing.JTextField();
        labeBairro_CadC = new javax.swing.JLabel();
        textBairro_CadC = new javax.swing.JTextField();
        labelCidade_CadC = new javax.swing.JLabel();
        textCidade_CadC = new javax.swing.JTextField();
        labelUF_CadC = new javax.swing.JLabel();
        textUF_CadC = new javax.swing.JTextField();
        btnLimparNome_CadC = new javax.swing.JButton();
        btnCadastrar_CadC = new javax.swing.JButton();
        btnLimparEnd_CadC = new javax.swing.JButton();
        resultValidaCPF_CadC = new javax.swing.JLabel();
        labelRenda_CadC = new javax.swing.JLabel();
        textRenda_CadC = new javax.swing.JTextField();
        panelVincularCliente = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TabelaVincularClientes = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        txtPesquisarCPF = new javax.swing.JTextField();
        btnVincularClienteConta = new javax.swing.JButton();
        cmbTipoConta = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        btnLimparPesquisaAtCnt = new javax.swing.JButton();
        panelCC = new javax.swing.JPanel();
        labelDepInicCC = new javax.swing.JLabel();
        labelLimiteCC = new javax.swing.JLabel();
        textDepInicCC = new javax.swing.JTextField();
        textLimiteCC = new javax.swing.JTextField();
        panelCI = new javax.swing.JPanel();
        labelDepInicCI = new javax.swing.JLabel();
        labelDepMinCI = new javax.swing.JLabel();
        labelMontMinCI = new javax.swing.JLabel();
        textDepInicCI = new javax.swing.JTextField();
        textDepMinCI = new javax.swing.JTextField();
        textMontMinCI = new javax.swing.JTextField();
        panelOperarConta = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TabelaClienteOperar = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        txtPesquisarCPFOperar = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        textRecebeSaldo = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        textRecebeConta = new javax.swing.JLabel();
        btnRemunerar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        textRecebeNome = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        textRecebeCPF = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        textSacar = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        btnSacar = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        textDepositar = new javax.swing.JTextField();
        btnDepositar = new javax.swing.JButton();
        btnLimpaPesqMov = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        labelOp = new javax.swing.JLabel();
        resultOp = new javax.swing.JLabel();
        labelOp1 = new javax.swing.JLabel();
        resultOp1 = new javax.swing.JLabel();
        labelOp2 = new javax.swing.JLabel();
        resultOp2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelManterClientes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                panelManterClientesKeyTyped(evt);
            }
        });

        btnRemoverCliente.setText("Remover Cliente");
        btnRemoverCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverClienteActionPerformed(evt);
            }
        });

        TabelaClienteGeral.setModel(clienteTableModel);
        TabelaClienteGeral.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabelaClienteGeralMouseClicked(evt);
            }
        });
        Clientes_Geral.setViewportView(TabelaClienteGeral);

        labelListaClientes.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labelListaClientes.setText("Lista de Clientes");
        labelListaClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelListaClientesMouseClicked(evt);
            }
        });

        btnAtualizar.setText("Atualizar");
        btnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarActionPerformed(evt);
            }
        });

        boxClassificar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione...", "Nome", "Sobrenome", "Maior Salário" }));
        boxClassificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxClassificarActionPerformed(evt);
            }
        });

        labelPesquisar.setText("Pesquisar por:");

        txtPesquisar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesquisarKeyReleased(evt);
            }
        });

        labelClassificar.setText("Classificar por:");

        labelDadosPessoaisTit_Geral.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labelDadosPessoaisTit_Geral.setText("Dados pessoais");

        labelNome_Geral.setText("Nome:");

        textNome_Geral.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textNome_GeralKeyReleased(evt);
            }
        });

        labelSobrenome_Geral.setText("Sobrenome:");

        textSobrenome_Geral.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textSobrenome_GeralKeyReleased(evt);
            }
        });

        labelRenda_Geral.setText("Renda:");

        textRenda_Geral.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textRenda_GeralKeyReleased(evt);
            }
        });

        labelRG_Geral.setText("RG:");

        textRG_Geral.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textRG_GeralKeyReleased(evt);
            }
        });

        labelCPF_Geral.setText("CPF:");

        textCPF_Geral.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textCPF_GeralKeyReleased(evt);
            }
        });

        labelEnderecoTit_Geral.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labelEnderecoTit_Geral.setText("Endereço");

        labelCEP_Geral.setText("CEP:");

        textCEP_Geral.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textCEP_GeralKeyReleased(evt);
            }
        });

        btnBuscaCEP_Geral.setText("Busca pelo CEP");
        btnBuscaCEP_Geral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscaCEP_GeralActionPerformed(evt);
            }
        });

        labelLogradouro_Geral.setText("Logradouro:");

        textLogradouro_Geral.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textLogradouro_GeralKeyReleased(evt);
            }
        });

        labelNumeroPredial_Geral.setText("Número Predial:");

        textNumeroPredial_Geral.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textNumeroPredial_GeralKeyReleased(evt);
            }
        });

        textUF_Geral.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textUF_GeralKeyReleased(evt);
            }
        });

        labelUF_Geral.setText("UF:");

        textCidade_Geral.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textCidade_GeralKeyReleased(evt);
            }
        });

        labelCidade_Geral.setText("Cidade:");

        textBairro_Geral.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textBairro_GeralKeyReleased(evt);
            }
        });

        labeBairro_Geral.setText("Bairro:");

        textComplemento_Geral.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textComplemento_GeralKeyReleased(evt);
            }
        });

        labelComplemento_Geral.setText("Complemento:");

        btnLimparEnd_Geral.setText("Limpar");
        btnLimparEnd_Geral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparEnd_GeralActionPerformed(evt);
            }
        });

        comboPesquisarPor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nome", "Sobrenome", "CPF", "RG" }));

        org.jdesktop.layout.GroupLayout ClientesLayout = new org.jdesktop.layout.GroupLayout(Clientes);
        Clientes.setLayout(ClientesLayout);
        ClientesLayout.setHorizontalGroup(
            ClientesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(ClientesLayout.createSequentialGroup()
                .add(32, 32, 32)
                .add(ClientesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(ClientesLayout.createSequentialGroup()
                        .add(btnRemoverCliente)
                        .add(0, 0, Short.MAX_VALUE))
                    .add(ClientesLayout.createSequentialGroup()
                        .add(ClientesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(labelEnderecoTit_Geral)
                            .add(ClientesLayout.createSequentialGroup()
                                .add(17, 17, 17)
                                .add(ClientesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                    .add(labelCEP_Geral)
                                    .add(labelComplemento_Geral))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(ClientesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                    .add(ClientesLayout.createSequentialGroup()
                                        .add(btnLimparEnd_Geral)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .add(btnAtualizar))
                                    .add(ClientesLayout.createSequentialGroup()
                                        .add(ClientesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                            .add(org.jdesktop.layout.GroupLayout.LEADING, textComplemento_Geral)
                                            .add(org.jdesktop.layout.GroupLayout.LEADING, ClientesLayout.createSequentialGroup()
                                                .add(textCEP_Geral, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 120, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                                .add(btnBuscaCEP_Geral)))
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                        .add(ClientesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                            .add(ClientesLayout.createSequentialGroup()
                                                .add(labelLogradouro_Geral)
                                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                                .add(textLogradouro_Geral, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 427, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                                .add(labelNumeroPredial_Geral))
                                            .add(ClientesLayout.createSequentialGroup()
                                                .add(labeBairro_Geral)
                                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                                .add(textBairro_Geral, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 161, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                                .add(labelCidade_Geral)
                                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                                .add(textCidade_Geral, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 328, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(ClientesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                            .add(textNumeroPredial_Geral, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 82, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                            .add(ClientesLayout.createSequentialGroup()
                                                .add(labelUF_Geral)
                                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                                .add(textUF_Geral, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 55, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))))))
                        .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .add(ClientesLayout.createSequentialGroup()
                        .add(ClientesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(ClientesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                .add(ClientesLayout.createSequentialGroup()
                                    .add(labelListaClientes)
                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .add(labelClassificar)
                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                    .add(boxClassificar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 135, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                    .add(labelPesquisar)
                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                    .add(comboPesquisarPor, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                    .add(txtPesquisar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 161, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .add(Clientes_Geral, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 993, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(labelDadosPessoaisTit_Geral, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 180, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(ClientesLayout.createSequentialGroup()
                                .add(ClientesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(labelNome_Geral)
                                    .add(labelRG_Geral))
                                .add(ClientesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(ClientesLayout.createSequentialGroup()
                                        .add(5, 5, 5)
                                        .add(textRG_Geral, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 274, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(labelCPF_Geral)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(textCPF_Geral, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 274, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                    .add(ClientesLayout.createSequentialGroup()
                                        .add(4, 4, 4)
                                        .add(textNome_Geral, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 274, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(labelSobrenome_Geral)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(textSobrenome_Geral, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 274, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(labelRenda_Geral)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(textRenda_Geral)))))
                        .addContainerGap(48, Short.MAX_VALUE))))
        );
        ClientesLayout.setVerticalGroup(
            ClientesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(ClientesLayout.createSequentialGroup()
                .addContainerGap()
                .add(ClientesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(boxClassificar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(labelPesquisar)
                    .add(txtPesquisar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(labelClassificar)
                    .add(labelListaClientes)
                    .add(comboPesquisarPor, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(Clientes_Geral, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 189, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(labelDadosPessoaisTit_Geral)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(ClientesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(labelNome_Geral)
                    .add(textNome_Geral, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(labelSobrenome_Geral)
                    .add(textSobrenome_Geral, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(labelRenda_Geral)
                    .add(textRenda_Geral, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(ClientesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(textRG_Geral, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(labelRG_Geral)
                    .add(labelCPF_Geral)
                    .add(textCPF_Geral, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(labelEnderecoTit_Geral)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(ClientesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(labelCEP_Geral)
                    .add(textCEP_Geral, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(btnBuscaCEP_Geral)
                    .add(labelLogradouro_Geral)
                    .add(textLogradouro_Geral, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(labelNumeroPredial_Geral)
                    .add(textNumeroPredial_Geral, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(ClientesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(labelComplemento_Geral)
                    .add(textComplemento_Geral, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(labeBairro_Geral)
                    .add(textBairro_Geral, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(labelCidade_Geral)
                    .add(textCidade_Geral, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(labelUF_Geral)
                    .add(textUF_Geral, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(ClientesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btnLimparEnd_Geral)
                    .add(btnAtualizar))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(btnRemoverCliente)
                .addContainerGap(126, Short.MAX_VALUE))
        );

        panelManterClientes.addTab("Clientes", Clientes);

        labelNome_Cadc.setText("Nome:");

        labelSobrenome_Cadc.setText("Sobrenome:");

        labelRG_Cadc.setText("RG:");

        labelCPF_CadC.setText("CPF:");

        labelDadosPessoaisTit_Cadc.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labelDadosPessoaisTit_Cadc.setText("Dados pessoais");

        textNome_CadC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textNome_CadCKeyReleased(evt);
            }
        });

        textSobrenome_CadC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textSobrenome_CadCKeyReleased(evt);
            }
        });

        textRG_CadC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textRG_CadCKeyReleased(evt);
            }
        });

        textCPF_CadC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textCPF_CadCKeyReleased(evt);
            }
        });

        labelEnderecoTit_CadC.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labelEnderecoTit_CadC.setText("Endereço");

        labelCEP_CadC.setText("CEP:");

        labelLogradouro_CadC.setText("Logradouro:");

        labelComplemento_CadC.setText("Complemento:");

        textCEP_CadC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textCEP_CadCKeyReleased(evt);
            }
        });

        btnBuscaCEP.setText("Busca pelo CEP");
        btnBuscaCEP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscaCEPActionPerformed(evt);
            }
        });

        textLogradouro_CadC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textLogradouro_CadCKeyReleased(evt);
            }
        });

        labelNumeroPredial_CadC.setText("Número Predial:");

        textNumeroPredial_CadC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textNumeroPredial_CadCKeyReleased(evt);
            }
        });

        textComplemento_CadC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textComplemento_CadCKeyReleased(evt);
            }
        });

        labeBairro_CadC.setText("Bairro:");

        textBairro_CadC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textBairro_CadCKeyReleased(evt);
            }
        });

        labelCidade_CadC.setText("Cidade:");

        textCidade_CadC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textCidade_CadCKeyReleased(evt);
            }
        });

        labelUF_CadC.setText("UF:");

        textUF_CadC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textUF_CadCKeyReleased(evt);
            }
        });

        btnLimparNome_CadC.setText("Limpar");
        btnLimparNome_CadC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparNome_CadCActionPerformed(evt);
            }
        });

        btnCadastrar_CadC.setText("Cadastrar");
        btnCadastrar_CadC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrar_CadCActionPerformed(evt);
            }
        });

        btnLimparEnd_CadC.setText("Limpar");
        btnLimparEnd_CadC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparEnd_CadCActionPerformed(evt);
            }
        });

        labelRenda_CadC.setText("Renda:");

        textRenda_CadC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textRenda_CadCKeyReleased(evt);
            }
        });

        org.jdesktop.layout.GroupLayout CadCLayout = new org.jdesktop.layout.GroupLayout(CadC);
        CadC.setLayout(CadCLayout);
        CadCLayout.setHorizontalGroup(
            CadCLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(CadCLayout.createSequentialGroup()
                .add(CadCLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(CadCLayout.createSequentialGroup()
                        .add(62, 62, 62)
                        .add(CadCLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(labelNome_Cadc)
                            .add(labelRG_Cadc)
                            .add(labelCPF_CadC)
                            .add(labelRenda_CadC))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(CadCLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(CadCLayout.createSequentialGroup()
                                .add(CadCLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, btnLimparNome_CadC)
                                    .add(textCPF_CadC, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 274, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .add(97, 97, 97)
                                .add(resultValidaCPF_CadC, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .add(CadCLayout.createSequentialGroup()
                                .add(CadCLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(textRG_CadC, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 274, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(CadCLayout.createSequentialGroup()
                                        .add(CadCLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                            .add(org.jdesktop.layout.GroupLayout.LEADING, textRenda_CadC, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE)
                                            .add(org.jdesktop.layout.GroupLayout.LEADING, textNome_CadC))
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(labelSobrenome_Cadc)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(textSobrenome_CadC, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 274, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                                .add(0, 0, Short.MAX_VALUE))))
                    .add(CadCLayout.createSequentialGroup()
                        .addContainerGap()
                        .add(labelDadosPessoaisTit_Cadc, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 180, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .add(CadCLayout.createSequentialGroup()
                .addContainerGap()
                .add(CadCLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(labelEnderecoTit_CadC)
                    .add(CadCLayout.createSequentialGroup()
                        .add(17, 17, 17)
                        .add(CadCLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(labelCEP_CadC)
                            .add(labelComplemento_CadC))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(CadCLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(CadCLayout.createSequentialGroup()
                                .add(btnLimparEnd_CadC)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(btnCadastrar_CadC))
                            .add(CadCLayout.createSequentialGroup()
                                .add(CadCLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, textComplemento_CadC)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, CadCLayout.createSequentialGroup()
                                        .add(textCEP_CadC, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 120, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(btnBuscaCEP)))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(CadCLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                    .add(CadCLayout.createSequentialGroup()
                                        .add(labelLogradouro_CadC)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(textLogradouro_CadC, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 427, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(labelNumeroPredial_CadC))
                                    .add(CadCLayout.createSequentialGroup()
                                        .add(labeBairro_CadC)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(textBairro_CadC, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 161, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(labelCidade_CadC)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(textCidade_CadC, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 328, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(CadCLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                    .add(textNumeroPredial_CadC, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 82, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(CadCLayout.createSequentialGroup()
                                        .add(labelUF_CadC)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(textUF_CadC, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 55, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        CadCLayout.setVerticalGroup(
            CadCLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(CadCLayout.createSequentialGroup()
                .addContainerGap()
                .add(labelDadosPessoaisTit_Cadc)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(CadCLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(labelNome_Cadc)
                    .add(textNome_CadC, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(labelSobrenome_Cadc)
                    .add(textSobrenome_CadC, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(CadCLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(labelRenda_CadC)
                    .add(textRenda_CadC, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(9, 9, 9)
                .add(CadCLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(labelRG_Cadc)
                    .add(textRG_CadC, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(CadCLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(labelCPF_CadC)
                    .add(textCPF_CadC, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(resultValidaCPF_CadC, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 23, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(btnLimparNome_CadC)
                .add(16, 16, 16)
                .add(labelEnderecoTit_CadC)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(CadCLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(labelCEP_CadC)
                    .add(textCEP_CadC, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(btnBuscaCEP)
                    .add(labelLogradouro_CadC)
                    .add(textLogradouro_CadC, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(labelNumeroPredial_CadC)
                    .add(textNumeroPredial_CadC, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(CadCLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(labelComplemento_CadC)
                    .add(textComplemento_CadC, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(labeBairro_CadC)
                    .add(textBairro_CadC, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(labelCidade_CadC)
                    .add(textCidade_CadC, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(labelUF_CadC)
                    .add(textUF_CadC, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(CadCLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btnCadastrar_CadC)
                    .add(btnLimparEnd_CadC))
                .addContainerGap(271, Short.MAX_VALUE))
        );

        panelManterClientes.addTab("Cadastrar novo Cliente", CadC);

        panelGeral.addTab("Manter Clientes", panelManterClientes);

        panelVincularCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panelVincularClienteMouseClicked(evt);
            }
        });

        TabelaVincularClientes.setModel(clienteTableModelOperacao);
        TabelaVincularClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabelaVincularClientesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TabelaVincularClientes);

        jLabel3.setText("Selecione o Cliente ou Digite o CPF: ");

        txtPesquisarCPF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtPesquisarCPFMouseClicked(evt);
            }
        });
        txtPesquisarCPF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesquisarCPFKeyReleased(evt);
            }
        });

        btnVincularClienteConta.setText("Vincular");
        btnVincularClienteConta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVincularClienteContaActionPerformed(evt);
            }
        });

        cmbTipoConta.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione...", "Conta Corrente", "Conta Investimento" }));
        cmbTipoConta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTipoContaActionPerformed(evt);
            }
        });

        jLabel4.setText("Tipo de Conta: ");

        btnLimparPesquisaAtCnt.setText("Limpar");
        btnLimparPesquisaAtCnt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparPesquisaAtCntActionPerformed(evt);
            }
        });

        labelDepInicCC.setText("Depósito Inicial:");

        labelLimiteCC.setText("Limite:");

        textDepInicCC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textDepInicCCKeyReleased(evt);
            }
        });

        textLimiteCC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textLimiteCCKeyReleased(evt);
            }
        });

        org.jdesktop.layout.GroupLayout panelCCLayout = new org.jdesktop.layout.GroupLayout(panelCC);
        panelCC.setLayout(panelCCLayout);
        panelCCLayout.setHorizontalGroup(
            panelCCLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(panelCCLayout.createSequentialGroup()
                .addContainerGap()
                .add(panelCCLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(panelCCLayout.createSequentialGroup()
                        .add(labelDepInicCC)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(textDepInicCC))
                    .add(panelCCLayout.createSequentialGroup()
                        .add(labelLimiteCC)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(textLimiteCC)))
                .addContainerGap())
        );
        panelCCLayout.setVerticalGroup(
            panelCCLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(panelCCLayout.createSequentialGroup()
                .addContainerGap()
                .add(panelCCLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(labelDepInicCC)
                    .add(textDepInicCC, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(panelCCLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(labelLimiteCC)
                    .add(textLimiteCC, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        labelDepInicCI.setText("Depósito Inicial:");

        labelDepMinCI.setText("Depósito Mínimo:");

        labelMontMinCI.setText("Montante Mínimo:");

        textDepInicCI.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textDepInicCIKeyReleased(evt);
            }
        });

        textDepMinCI.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textDepMinCIKeyReleased(evt);
            }
        });

        textMontMinCI.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textMontMinCIKeyReleased(evt);
            }
        });

        org.jdesktop.layout.GroupLayout panelCILayout = new org.jdesktop.layout.GroupLayout(panelCI);
        panelCI.setLayout(panelCILayout);
        panelCILayout.setHorizontalGroup(
            panelCILayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(panelCILayout.createSequentialGroup()
                .add(19, 19, 19)
                .add(panelCILayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(labelDepInicCI)
                    .add(labelDepMinCI)
                    .add(labelMontMinCI))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(panelCILayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(textDepInicCI)
                    .add(textDepMinCI)
                    .add(textMontMinCI, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelCILayout.setVerticalGroup(
            panelCILayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(panelCILayout.createSequentialGroup()
                .addContainerGap()
                .add(panelCILayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(labelDepInicCI)
                    .add(textDepInicCI, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(panelCILayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(labelDepMinCI)
                    .add(textDepMinCI, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(panelCILayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(labelMontMinCI)
                    .add(textMontMinCI, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(126, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(54, 54, 54)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 974, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jLabel3)
                        .add(18, 18, 18)
                        .add(txtPesquisarCPF, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 107, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(btnLimparPesquisaAtCnt))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, panelCC, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(jLabel4)
                                .add(18, 18, 18)
                                .add(cmbTipoConta, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 163, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .add(18, 18, 18)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(btnVincularClienteConta)
                            .add(panelCI, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(65, 65, 65)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel3)
                    .add(txtPesquisarCPF, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(btnLimparPesquisaAtCnt))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 101, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(37, 37, 37)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(cmbTipoConta, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel4)
                    .add(btnVincularClienteConta))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(panelCC, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(panelCI, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(105, Short.MAX_VALUE))
        );

        panelVincularCliente.addTab("Vincular Cliente", jPanel1);

        panelGeral.addTab("Vincular Cliente a Conta", panelVincularCliente);

        panelOperarConta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panelOperarContaMouseClicked(evt);
            }
        });

        TabelaClienteOperar.setModel(clienteTableModelOperacao);
        TabelaClienteOperar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabelaClienteOperarMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(TabelaClienteOperar);

        jLabel5.setText("Selecione o Cliente ou Digite o CPF: ");

        txtPesquisarCPFOperar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtPesquisarCPFOperarMouseClicked(evt);
            }
        });
        txtPesquisarCPFOperar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesquisarCPFOperarKeyReleased(evt);
            }
        });

        jLabel1.setText("Saldo em Conta: ");

        jLabel6.setText("Tipo de Conta: ");

        btnRemunerar.setText("Remunerar");
        btnRemunerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemunerarActionPerformed(evt);
            }
        });

        jLabel2.setText("Nome");

        textRecebeNome.setText(" ");

        jLabel7.setText("CPF");

        textRecebeCPF.setText(" ");

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel3Layout.createSequentialGroup()
                        .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel3Layout.createSequentialGroup()
                                .add(jLabel7)
                                .add(18, 18, 18)
                                .add(textRecebeCPF, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .add(jPanel3Layout.createSequentialGroup()
                                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(btnRemunerar)
                                    .add(jPanel3Layout.createSequentialGroup()
                                        .add(jLabel2)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                        .add(textRecebeNome, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 109, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                                .add(0, 0, Short.MAX_VALUE)))
                        .add(261, 261, 261))
                    .add(jPanel3Layout.createSequentialGroup()
                        .add(jLabel1)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(textRecebeSaldo, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .add(jPanel3Layout.createSequentialGroup()
                        .add(jLabel6)
                        .add(18, 18, 18)
                        .add(textRecebeConta, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(textRecebeNome))
                .add(18, 18, 18)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel7)
                    .add(textRecebeCPF))
                .add(18, 18, 18)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jLabel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(textRecebeSaldo, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jLabel6)
                    .add(textRecebeConta, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 14, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(28, 28, 28)
                .add(btnRemunerar)
                .addContainerGap(77, Short.MAX_VALUE))
        );

        textSacar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textSacarKeyReleased(evt);
            }
        });

        jLabel8.setText("Sacar: ");

        btnSacar.setText("Sacar");
        btnSacar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacarActionPerformed(evt);
            }
        });

        jLabel9.setText("Depositar");

        textDepositar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textDepositarKeyReleased(evt);
            }
        });

        btnDepositar.setText("Depositar");
        btnDepositar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDepositarActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel4Layout = new org.jdesktop.layout.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jPanel4Layout.createSequentialGroup()
                        .add(jLabel8)
                        .add(18, 18, 18)
                        .add(textSacar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 78, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(btnSacar, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .add(jPanel4Layout.createSequentialGroup()
                        .add(jLabel9)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(textDepositar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 78, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(btnDepositar)))
                .addContainerGap(246, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel8)
                    .add(textSacar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(btnSacar))
                .add(25, 25, 25)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel9)
                    .add(textDepositar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(btnDepositar))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnLimpaPesqMov.setText("Limpar");
        btnLimpaPesqMov.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpaPesqMovActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel5Layout = new org.jdesktop.layout.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(jPanel5Layout.createSequentialGroup()
                            .add(labelOp, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 88, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                            .add(resultOp, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 96, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel5Layout.createSequentialGroup()
                            .add(labelOp1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 88, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                            .add(resultOp1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 96, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(jPanel5Layout.createSequentialGroup()
                        .add(labelOp2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 88, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(resultOp2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 96, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(resultOp, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
                    .add(labelOp, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(resultOp1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(labelOp1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(resultOp2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(labelOp2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(51, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(88, 88, 88)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 878, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                        .add(jPanel2Layout.createSequentialGroup()
                            .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                            .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                .add(jPanel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(jPanel2Layout.createSequentialGroup()
                                    .add(jPanel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(0, 267, Short.MAX_VALUE))))
                        .add(jPanel2Layout.createSequentialGroup()
                            .add(jLabel5)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                            .add(txtPesquisarCPFOperar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 107, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                            .add(btnLimpaPesqMov)
                            .add(454, 454, 454))))
                .addContainerGap(81, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(22, 22, 22)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel5)
                    .add(txtPesquisarCPFOperar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(btnLimpaPesqMov))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 171, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jPanel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(1, 1, 1)
                        .add(jPanel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(105, Short.MAX_VALUE))
        );

        panelOperarConta.addTab("Movimentar Conta", jPanel2);

        panelGeral.addTab("Operar Conta", panelOperarConta);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(panelGeral)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(panelGeral)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLimparNome_CadCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparNome_CadCActionPerformed
        limparCamposCadastroCliente();
    }//GEN-LAST:event_btnLimparNome_CadCActionPerformed

    private void btnLimparEnd_CadCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparEnd_CadCActionPerformed
        limparEnderecoCadastroCliente();
    }//GEN-LAST:event_btnLimparEnd_CadCActionPerformed

    private void btnBuscaCEPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscaCEPActionPerformed
        String CEP = textCEP_CadC.getText();
        try {
            Endereco end = findEndereco(CEP);
            if (end != null) {
                textLogradouro_CadC.setText(end.getLogradouro());
                textBairro_CadC.setText(end.getBairro());
                textCidade_CadC.setText(end.getCidade());
                textUF_CadC.setText(end.getUf());
            } else {
                throw new NullPointerException();
            }
        } catch (NullPointerException np) {
            JOptionPane.showMessageDialog(null, "CEP não registrado no sistema. Por favor insira os dados manualmente.", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnBuscaCEPActionPerformed

    private void labelListaClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelListaClientesMouseClicked
        popula();
    }//GEN-LAST:event_labelListaClientesMouseClicked

    private void textNome_CadCKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textNome_CadCKeyReleased
        textNome_CadC.setText(textNome_CadC.getText().toUpperCase());
    }//GEN-LAST:event_textNome_CadCKeyReleased

    private void textSobrenome_CadCKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textSobrenome_CadCKeyReleased
        textSobrenome_CadC.setText(textSobrenome_CadC.getText().toUpperCase());
    }//GEN-LAST:event_textSobrenome_CadCKeyReleased

    private void textRenda_CadCKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textRenda_CadCKeyReleased
        try {
            textRenda_CadC.setText(textRenda_CadC.getText().replace("-", ""));
            textRenda_CadC.setText(textRenda_CadC.getText().replace(",", "."));
            double teste = Double.parseDouble(textRenda_CadC.getText());
        } catch (Exception ex) {
            textRenda_CadC.setText("");
            JOptionPane.showMessageDialog(null, "Renda deve conter um valor numérico positivo", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_textRenda_CadCKeyReleased

    private void textCPF_CadCKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textCPF_CadCKeyReleased
        try {
            textCPF_CadC.setText(textCPF_CadC.getText().replace("-", ""));
            textCPF_CadC.setText(textCPF_CadC.getText().replace(".", ""));
            textCPF_CadC.setText(textCPF_CadC.getText().replace(",", ""));
            double teste = Double.parseDouble(textCPF_CadC.getText());

        } catch (Exception ex) {
            textCPF_CadC.setText("");
            JOptionPane.showMessageDialog(null, "Insira somente números", "Erro", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_textCPF_CadCKeyReleased

    private void textRG_CadCKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textRG_CadCKeyReleased
        try {
            textRG_CadC.setText(textRG_CadC.getText().replace("-", ""));
            textRG_CadC.setText(textRG_CadC.getText().replace(".", ""));
            textRG_CadC.setText(textRG_CadC.getText().replace(",", ""));
            double teste = Double.parseDouble(textRG_CadC.getText());

        } catch (Exception ex) {
            textRG_CadC.setText("");
            JOptionPane.showMessageDialog(null, "Insira somente números", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_textRG_CadCKeyReleased

    private void textCEP_CadCKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textCEP_CadCKeyReleased
        try {
            textCEP_CadC.setText(textCEP_CadC.getText().replace("-", ""));
            textCEP_CadC.setText(textCEP_CadC.getText().replace(".", ""));
            textCEP_CadC.setText(textCEP_CadC.getText().replace(",", ""));
            double teste = Double.parseDouble(textCEP_CadC.getText());

        } catch (Exception ex) {
            textCEP_CadC.setText("");
            JOptionPane.showMessageDialog(null, "Insira somente números", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_textCEP_CadCKeyReleased

    private void textLogradouro_CadCKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textLogradouro_CadCKeyReleased
        textLogradouro_CadC.setText(textLogradouro_CadC.getText().toUpperCase());
    }//GEN-LAST:event_textLogradouro_CadCKeyReleased

    private void textNumeroPredial_CadCKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textNumeroPredial_CadCKeyReleased
        textNumeroPredial_CadC.setText(textNumeroPredial_CadC.getText().toUpperCase());
    }//GEN-LAST:event_textNumeroPredial_CadCKeyReleased

    private void textComplemento_CadCKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textComplemento_CadCKeyReleased
        textComplemento_CadC.setText(textComplemento_CadC.getText().toUpperCase());
    }//GEN-LAST:event_textComplemento_CadCKeyReleased

    private void textBairro_CadCKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textBairro_CadCKeyReleased
        textBairro_CadC.setText(textBairro_CadC.getText().toUpperCase());
    }//GEN-LAST:event_textBairro_CadCKeyReleased

    private void textCidade_CadCKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textCidade_CadCKeyReleased
        textCidade_CadC.setText(textCidade_CadC.getText().toUpperCase());
    }//GEN-LAST:event_textCidade_CadCKeyReleased

    private void textUF_CadCKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textUF_CadCKeyReleased
        textUF_CadC.setText(textUF_CadC.getText().toUpperCase());
    }//GEN-LAST:event_textUF_CadCKeyReleased

    private void btnCadastrar_CadCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrar_CadCActionPerformed
        cadastraClienteCompleto();
    }//GEN-LAST:event_btnCadastrar_CadCActionPerformed

    private void TabelaClienteGeralMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabelaClienteGeralMouseClicked
        linhaClicada = TabelaClienteGeral.rowAtPoint(evt.getPoint());
        clienteSelecionado = clienteTableModel.getCliente(linhaClicada);
        setFormulario(clienteSelecionado);

    }//GEN-LAST:event_TabelaClienteGeralMouseClicked

    private void btnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarActionPerformed
        atualizaCliente(clienteSelecionado);
        limpaFormulario();
    }//GEN-LAST:event_btnAtualizarActionPerformed

    private void btnLimparEnd_GeralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparEnd_GeralActionPerformed
        limpaFormulario();
    }//GEN-LAST:event_btnLimparEnd_GeralActionPerformed

    private void btnBuscaCEP_GeralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscaCEP_GeralActionPerformed
        String CEP = textCEP_Geral.getText();
        try {
            Endereco end = findEndereco(CEP);
            if (end != null) {
                textLogradouro_Geral.setText(end.getLogradouro());
                textBairro_Geral.setText(end.getBairro());
                textCidade_Geral.setText(end.getCidade());
                textUF_Geral.setText(end.getUf());
            } else {
                throw new NullPointerException();
            }
        } catch (NullPointerException np) {
            JOptionPane.showMessageDialog(null, "CEP não registrado no sistema. Por favor insira os dados manualmente.", "Erro", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnBuscaCEP_GeralActionPerformed

    private void btnRemoverClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverClienteActionPerformed
        if(clienteSelecionado.getConta() != null){
        String message = "!!!ATENÇÃO!!! "
                + "\nDeseja realmente excluir o Cliente selecionado?"
                + "\nFazê-lo irá eliminar também a conta vinculada!";

        String title = "Confirmação";

        int reply = JOptionPane.showConfirmDialog(null, message, title, JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION) {
        
        removerCliente(clienteSelecionado);
        }
        }else{
           removerCliente(clienteSelecionado); 
        }
    }//GEN-LAST:event_btnRemoverClienteActionPerformed

    private void txtPesquisarCPFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisarCPFKeyReleased
        if (txtPesquisarCPF.getText().equals("")) {
            clienteTableModelOperacao.setListaClientes(clientes);
        } else {
            clienteTableModelOperacao.setListaClientes(findCliente(txtPesquisarCPF.getText()));
        }

    }//GEN-LAST:event_txtPesquisarCPFKeyReleased

    private void btnLimparPesquisaAtCntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparPesquisaAtCntActionPerformed
        txtPesquisarCPF.setText("");
        clienteTableModelOperacao.setListaClientes(clientes);
    }//GEN-LAST:event_btnLimparPesquisaAtCntActionPerformed

    private void btnVincularClienteContaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVincularClienteContaActionPerformed
        vincular(clienteEmOperacao);
        clienteEmOperacao = new Cliente();
        limparACC();
        cmbTipoConta.setSelectedIndex(0);
    }//GEN-LAST:event_btnVincularClienteContaActionPerformed

    private void vincular(Cliente clienteEmOperacao) {
        if (clienteEmOperacao != null) {
            String tipoConta = cmbTipoConta.getSelectedItem().toString();
            switch (tipoConta) {
                case "Conta Corrente": {
                    double limite = Double.parseDouble(textLimiteCC.getText());
                    double depositoInicial = Double.parseDouble(textDepInicCC.getText());
                    setIdConta++;
                    ContaI conta = new ContaCorrente(setIdConta, depositoInicial, clienteEmOperacao, limite);
                    clienteEmOperacao.setConta(conta);
                    clienteTableModelOperacao.setListaClientes(clientes);

                    break;
                }
                case "Conta Investimento": {
                    double montanteMinimo = Double.parseDouble(textMontMinCI.getText());
                    double depositoMinimo = Double.parseDouble(textDepMinCI.getText());
                    double depositoInicial = Double.parseDouble(textDepInicCI.getText());

                    if (depositoInicial < depositoMinimo) {
                        showMessageDialog(null, "O deposito inicial nao deve ser menor que o deposito minimo");
                    } else {
                        setIdConta++;
                        ContaI conta = new ContaInvestimento(setIdConta, clienteEmOperacao, depositoInicial, depositoMinimo, montanteMinimo);
                        clienteEmOperacao.setConta(conta);
                        clienteTableModelOperacao.setListaClientes(clientes);
                    }
                    break;
                }
                default:
                    JOptionPane.showMessageDialog(null, "Selecione um tipo de conta!", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Selecione um cliente!", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void limparACC() {
        textLimiteCC.setText("");
        textDepInicCC.setText("");
        textMontMinCI.setText("");
        textDepMinCI.setText("");
        textDepInicCI.setText("");
        invisibleAcc();
    }


    private void TabelaVincularClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabelaVincularClientesMouseClicked
        linhaClicadaOp = TabelaVincularClientes.rowAtPoint(evt.getPoint());
        clienteEmOperacao = clienteTableModelOperacao.getCliente(linhaClicadaOp);
        if (clienteEmOperacao.getConta() != null) {
            JOptionPane.showMessageDialog(null, "Cliente já possui conta associada!", "Erro", JOptionPane.ERROR_MESSAGE);
            clienteEmOperacao = new Cliente();
        }

    }//GEN-LAST:event_TabelaVincularClientesMouseClicked

    private void cmbTipoContaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTipoContaActionPerformed
        String tipoConta = cmbTipoConta.getSelectedItem().toString();
        switch (tipoConta) {
            case "Conta Corrente": {
                visibleCC();

                break;
            }
            case "Conta Investimento": {
                visibleCI();
                break;
            }
            default:
                invisibleAcc();
        }
    }//GEN-LAST:event_cmbTipoContaActionPerformed

    private void txtPesquisarCPFOperarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisarCPFOperarKeyReleased
        if (txtPesquisarCPFOperar.getText().equals("")) {
            clienteTableModelOperacao.setListaClientes(findClienteComConta());
        } else {
            clienteTableModelOperacao.setListaClientes(findCliente(txtPesquisarCPFOperar.getText()));
        }
    }//GEN-LAST:event_txtPesquisarCPFOperarKeyReleased

    private void textDepInicCCKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textDepInicCCKeyReleased
        try {
            textDepInicCC.setText(textDepInicCC.getText().replace("-", ""));
            textDepInicCC.setText(textDepInicCC.getText().replace(",", "."));
            double teste = Double.parseDouble(textDepInicCC.getText());
        } catch (Exception ex) {
            textDepInicCC.setText("");
            JOptionPane.showMessageDialog(null, "Insira um valor numérico!", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_textDepInicCCKeyReleased

    private void textDepInicCIKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textDepInicCIKeyReleased
        try {
            textDepInicCI.setText(textDepInicCI.getText().replace("-", ""));
            textDepInicCI.setText(textDepInicCI.getText().replace(",", "."));
            double teste = Double.parseDouble(textDepInicCI.getText());
        } catch (Exception ex) {
            textDepInicCI.setText("");
            JOptionPane.showMessageDialog(null, "Insira um valor numérico!", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_textDepInicCIKeyReleased

    private void textLimiteCCKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textLimiteCCKeyReleased
        try {
            textLimiteCC.setText(textLimiteCC.getText().replace("-", ""));
            textLimiteCC.setText(textLimiteCC.getText().replace(",", "."));
            double teste = Double.parseDouble(textLimiteCC.getText());
        } catch (Exception ex) {
            textLimiteCC.setText("");
            JOptionPane.showMessageDialog(null, "Insira um valor numérico!", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_textLimiteCCKeyReleased

    private void textDepMinCIKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textDepMinCIKeyReleased
        try {
            textDepMinCI.setText(textDepMinCI.getText().replace("-", ""));
            textDepMinCI.setText(textDepMinCI.getText().replace(",", "."));
            double teste = Double.parseDouble(textDepMinCI.getText());
        } catch (Exception ex) {
            textDepMinCI.setText("");
            JOptionPane.showMessageDialog(null, "Insira um valor numérico!", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_textDepMinCIKeyReleased

    private void textMontMinCIKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textMontMinCIKeyReleased
        try {
            textMontMinCI.setText(textMontMinCI.getText().replace("-", ""));
            textMontMinCI.setText(textMontMinCI.getText().replace(",", "."));
            double teste = Double.parseDouble(textMontMinCI.getText());
        } catch (Exception ex) {
            textMontMinCI.setText("");
            JOptionPane.showMessageDialog(null, "Insira um valor numérico!", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_textMontMinCIKeyReleased

    private void txtPesquisarCPFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtPesquisarCPFMouseClicked
        clienteTableModelOperacao.setListaClientes(findClienteSemConta());
    }//GEN-LAST:event_txtPesquisarCPFMouseClicked

    private void txtPesquisarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisarKeyReleased
        String tipoPesquisa = comboPesquisarPor.getSelectedItem().toString();
        switch (tipoPesquisa) {
            case "Nome": {
                if (txtPesquisar.getText().equals("")) {
                    clienteTableModel.setListaClientes(clientes);
                } else {
                    clienteTableModel.setListaClientes(findClienteNome(txtPesquisar.getText().toUpperCase()));
                }
                break;
            }
            case "Sobrenome": {
                if (txtPesquisar.getText().equals("")) {
                    clienteTableModel.setListaClientes(clientes);
                } else {
                    clienteTableModel.setListaClientes(findClienteSobrenome(txtPesquisar.getText().toUpperCase()));
                }

                break;
            }
            case "CPF": {
                if (txtPesquisar.getText().equals("")) {
                    clienteTableModel.setListaClientes(clientes);
                } else {
                    clienteTableModel.setListaClientes(findCliente(txtPesquisar.getText()));
                }
                break;
            }
            case "RG": {
                if (txtPesquisar.getText().equals("")) {
                    clienteTableModel.setListaClientes(clientes);
                } else {
                    clienteTableModel.setListaClientes(findClienteRG(txtPesquisar.getText()));
                }

                break;
            }
        }
    }//GEN-LAST:event_txtPesquisarKeyReleased

    private void TabelaClienteOperarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabelaClienteOperarMouseClicked
        linhaClicadaMv = TabelaClienteOperar.rowAtPoint(evt.getPoint());
        clienteSelecionadoMov = clienteTableModel.getCliente(linhaClicadaMv);

        getInfoConta(clienteSelecionadoMov.getConta());
    }//GEN-LAST:event_TabelaClienteOperarMouseClicked

    private void txtPesquisarCPFOperarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtPesquisarCPFOperarMouseClicked
        clienteTableModelOperacao.setListaClientes(findClienteComConta());
    }//GEN-LAST:event_txtPesquisarCPFOperarMouseClicked

    private void btnLimpaPesqMovActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpaPesqMovActionPerformed
        limparPesquisaMov();
        clienteTableModelOperacao.setListaClientes(findClienteComConta());
    }//GEN-LAST:event_btnLimpaPesqMovActionPerformed

    private void btnSacarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacarActionPerformed
        clienteSelecionadoMov.getConta().saca(Double.parseDouble(textSacar.getText()));
        textSacar.setText("");
        getInfoConta(clienteSelecionadoMov.getConta());
    }//GEN-LAST:event_btnSacarActionPerformed

    private void btnDepositarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDepositarActionPerformed
        clienteSelecionadoMov.getConta().deposita(Double.parseDouble(textDepositar.getText()));
        textDepositar.setText("");
        getInfoConta(clienteSelecionadoMov.getConta());
    }//GEN-LAST:event_btnDepositarActionPerformed

    private void textSacarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textSacarKeyReleased
        try {
            textSacar.setText(textSacar.getText().replace("-", ""));
            textSacar.setText(textSacar.getText().replace(",", "."));
            double teste = Double.parseDouble(textSacar.getText());
        } catch (Exception ex) {
            textSacar.setText("");
            JOptionPane.showMessageDialog(null, "Insira um valor numérico!", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_textSacarKeyReleased

    private void textDepositarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textDepositarKeyReleased
        try {
            textDepositar.setText(textDepositar.getText().replace("-", ""));
            textDepositar.setText(textDepositar.getText().replace(",", "."));
            double teste = Double.parseDouble(textDepositar.getText());
        } catch (Exception ex) {
            textDepositar.setText("");
            JOptionPane.showMessageDialog(null, "Insira um valor numérico!", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_textDepositarKeyReleased

    private void btnRemunerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemunerarActionPerformed
        clienteSelecionadoMov.getConta().remunera();
        getInfoConta(clienteSelecionadoMov.getConta());
    }//GEN-LAST:event_btnRemunerarActionPerformed

    private void boxClassificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxClassificarActionPerformed
        String tipoClassificacao = boxClassificar.getSelectedItem().toString();
        switch (tipoClassificacao) {
            case "Selecione...": {
                classificarPorId();
                clienteTableModel.atualizaListaClientes();
                break;
            }
            case "Nome": {
                classificarPorNome();
                clienteTableModel.atualizaListaClientes();
                break;
            }
            case "Sobrenome": {
                classificarPorSobrenome();
                clienteTableModel.atualizaListaClientes();
                break;
            }
            case "Maior Salário": {
                classificarPorMaiorRenda();
                Collections.reverse(clientes);
                clienteTableModel.atualizaListaClientes();
                break;
            }

        }
    }//GEN-LAST:event_boxClassificarActionPerformed

    private void textCPF_GeralKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textCPF_GeralKeyReleased
        try {
            textCPF_Geral.setText(textCPF_Geral.getText().replace("-", ""));
            textCPF_Geral.setText(textCPF_Geral.getText().replace(".", ""));
            textCPF_Geral.setText(textCPF_Geral.getText().replace(",", ""));
            double teste = Double.parseDouble(textCPF_Geral.getText());

        } catch (Exception ex) {
            textCPF_Geral.setText("");
            JOptionPane.showMessageDialog(null, "Insira somente números", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_textCPF_GeralKeyReleased

    private void textNome_GeralKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textNome_GeralKeyReleased
       textNome_Geral.setText(textNome_Geral.getText().toUpperCase());
    }//GEN-LAST:event_textNome_GeralKeyReleased

    private void textSobrenome_GeralKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textSobrenome_GeralKeyReleased
        textSobrenome_Geral.setText(textSobrenome_Geral.getText().toUpperCase());
    }//GEN-LAST:event_textSobrenome_GeralKeyReleased

    private void textRenda_GeralKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textRenda_GeralKeyReleased
                try {
            textRenda_Geral.setText(textRenda_Geral.getText().replace("-", ""));
            textRenda_Geral.setText(textRenda_Geral.getText().replace(",", "."));
            double teste = Double.parseDouble(textRenda_Geral.getText());
        } catch (Exception ex) {
            textRenda_Geral.setText("");
            JOptionPane.showMessageDialog(null, "Renda deve conter um valor numérico positivo", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_textRenda_GeralKeyReleased

    private void textRG_GeralKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textRG_GeralKeyReleased
        try {
            textRG_Geral.setText(textRG_Geral.getText().replace("-", ""));
            textRG_Geral.setText(textRG_Geral.getText().replace(".", ""));
            textRG_Geral.setText(textRG_Geral.getText().replace(",", ""));
            double teste = Double.parseDouble(textRG_Geral.getText());

        } catch (Exception ex) {
            textRG_Geral.setText("");
            JOptionPane.showMessageDialog(null, "Insira somente números", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_textRG_GeralKeyReleased

    private void textCEP_GeralKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textCEP_GeralKeyReleased
                try {
            textCEP_Geral.setText(textCEP_Geral.getText().replace("-", ""));
            textCEP_Geral.setText(textCEP_Geral.getText().replace(".", ""));
            textCEP_Geral.setText(textCEP_Geral.getText().replace(",", ""));
            double teste = Double.parseDouble(textCEP_Geral.getText());

        } catch (Exception ex) {
            textCEP_Geral.setText("");
            JOptionPane.showMessageDialog(null, "Insira somente números", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_textCEP_GeralKeyReleased

    private void textLogradouro_GeralKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textLogradouro_GeralKeyReleased
        textLogradouro_Geral.setText(textLogradouro_Geral.getText().toUpperCase());
    }//GEN-LAST:event_textLogradouro_GeralKeyReleased

    private void textNumeroPredial_GeralKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textNumeroPredial_GeralKeyReleased
        textNumeroPredial_Geral.setText(textNumeroPredial_Geral.getText().toUpperCase());
    }//GEN-LAST:event_textNumeroPredial_GeralKeyReleased

    private void textComplemento_GeralKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textComplemento_GeralKeyReleased
        textComplemento_Geral.setText(textComplemento_Geral.getText().toUpperCase());
    }//GEN-LAST:event_textComplemento_GeralKeyReleased

    private void textBairro_GeralKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textBairro_GeralKeyReleased
        textBairro_Geral.setText(textBairro_Geral.getText().toUpperCase());
    }//GEN-LAST:event_textBairro_GeralKeyReleased

    private void textCidade_GeralKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textCidade_GeralKeyReleased
        textCidade_Geral.setText(textCidade_Geral.getText().toUpperCase());
    }//GEN-LAST:event_textCidade_GeralKeyReleased

    private void textUF_GeralKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textUF_GeralKeyReleased
        textUF_Geral.setText(textUF_Geral.getText().toUpperCase());
    }//GEN-LAST:event_textUF_GeralKeyReleased

    private void panelOperarContaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelOperarContaMouseClicked
        clienteTableModelOperacao.setListaClientes(findClienteComConta());
    }//GEN-LAST:event_panelOperarContaMouseClicked

    private void panelManterClientesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_panelManterClientesKeyTyped
        clienteTableModel.setListaClientes(clientes);
    }//GEN-LAST:event_panelManterClientesKeyTyped

    private void panelVincularClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelVincularClienteMouseClicked
        clienteTableModelOperacao.setListaClientes(findClienteSemConta());
    }//GEN-LAST:event_panelVincularClienteMouseClicked
    
    private void classificarPorNome() {

        Comparator comparator = new NomeComparator();
        Collections.sort(clientes, comparator);

    }

    private void classificarPorSobrenome() {

        Comparator comparator = new SobrenomeComparator();
        Collections.sort(clientes, comparator);

    }

    private void classificarPorMaiorRenda() {

        Comparator comparator = new RendaComparator();
        Collections.sort(clientes, comparator);

    }

    private void classificarPorId() {
        Collections.sort(clientes);

    }

    private void limparPesquisaMov() {
        txtPesquisarCPFOperar.setText("");
    }

    private void getInfoConta(ContaI conta) {
        textRecebeNome.setText(conta.getDono().getNome());
        textRecebeCPF.setText(conta.getDono().getCpf());
        textRecebeSaldo.setText(String.valueOf(formato.format(conta.getSaldo())));
        textRecebeConta.setText(conta.getTipoConta());
        String tpc = conta.getTipoConta();
        switch (tpc) {
            case "Conta Corrente": {
                labelOp.setText("Limite:");
                resultOp.setText(String.valueOf(formato.format(conta.getLimite())));
                labelOp1.setText("Disp. para Saque:");
                resultOp1.setText(String.valueOf(formato.format((conta.getLimite()+conta.getSaldo()))));
                labelOp2.setText("");
                resultOp2.setText("");
                break;
            }
            case "Conta Investimento": {
                labelOp.setText("Depósito mínimo:");
                resultOp.setText(String.valueOf(formato.format(conta.getDepositoMinimo())));
                labelOp1.setText("Montante mínimo:");
                resultOp1.setText(String.valueOf(formato.format(conta.getMontanteMinimo())));
                labelOp2.setText("Disp. para Saque:");
                resultOp2.setText(String.valueOf(formato.format((conta.getSaldo()-conta.getMontanteMinimo()))));
                break;
            }
        }
    }

    private void setFormulario(Cliente cliente) {
        textNome_Geral.setText(cliente.getNome());
        textSobrenome_Geral.setText(cliente.getSobrenome());
        textRenda_Geral.setText(String.valueOf(cliente.getRenda()));
        textRG_Geral.setText(cliente.getRg());
        textCPF_Geral.setText(cliente.getCpf());
        textLogradouro_Geral.setText(cliente.getEndereco().getLogradouro());
        textCEP_Geral.setText(cliente.getEndereco().getCep());
        textNumeroPredial_Geral.setText(String.valueOf(cliente.getEndereco().getNumero()));
        textComplemento_Geral.setText(cliente.getEndereco().getComplemento());
        textBairro_Geral.setText(cliente.getEndereco().getBairro());
        textCidade_Geral.setText(cliente.getEndereco().getCidade());
        textUF_Geral.setText(cliente.getEndereco().getUf());
    }

    private void limpaFormulario() {
        textNome_Geral.setText("");
        textSobrenome_Geral.setText("");
        textRenda_Geral.setText("");
        textRG_Geral.setText("");
        textCPF_Geral.setText("");
        textLogradouro_Geral.setText("");
        textCEP_Geral.setText("");
        textNumeroPredial_Geral.setText("");
        textComplemento_Geral.setText("");
        textBairro_Geral.setText("");
        textCidade_Geral.setText("");
        textUF_Geral.setText("");
        clienteSelecionado = new Cliente();
    }

    private void removerCliente(Cliente cliente) {
            int i = -1;
            for (Cliente C : clientes) {
                i++;
                if (C == cliente) {
                    clienteTableModel.removeCliente(C);
                    break;
                }
            }

            clienteSelecionado = new Cliente();
            limpaFormulario();
        
    }

    private void atualizaCliente(Cliente cliente) {
        cliente.setNome(textNome_Geral.getText());
        cliente.setSobrenome(textSobrenome_Geral.getText());
        cliente.setRenda(Double.parseDouble(textRenda_Geral.getText()));
        cliente.setRg(textRG_Geral.getText());
        cliente.setCpf(textCPF_Geral.getText());
        Endereco endereco = montaEnderecoTempGeral();
        gravaEnderecoClienteGeral(cliente, endereco);
        clienteTableModel.setListaClientes(clientes);
    }

    private Endereco montaEnderecoTempGeral() {
        String logradouro = textLogradouro_Geral.getText();
        String cep = textCEP_Geral.getText();
        String bairro = textBairro_Geral.getText();
        String cidade = textCidade_Geral.getText();
        String uf = textUF_Geral.getText();
        Endereco temp = new Endereco(cep, logradouro, bairro, cidade, uf);
        return temp;
    }

    private void cadastraClienteCompleto() {
        if (verificaCampos()) {
            Cliente cliente = cadastraCliente();
            Endereco endereco = montaEnderecoTemp();
            gravaEnderecoCliente(cliente, endereco);
        } else {
            JOptionPane.showMessageDialog(null, "Existem campos obrigatórios não preenchidos", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    private boolean verificaCampos() {
        boolean result = false;
        if (textNome_CadC.getText().equals("")
                || textSobrenome_CadC.getText().equals("")
                || textRenda_CadC.getText().equals("")
                || textRG_CadC.getText().equals("")
                || textCPF_CadC.getText().equals("")
                || textLogradouro_CadC.getText().equals("")
                || textCEP_CadC.getText().equals("")
                || textBairro_CadC.getText().equals("")
                || textCidade_CadC.getText().equals("")
                || textUF_CadC.getText().equals("")) {

        } else {
            result = true;
        }
        return result;
    }

    private boolean verificaCamposGeral() {
        boolean result = false;
        if (textNome_Geral.getText().equals("")
                || textSobrenome_Geral.getText().equals("")
                || textRenda_Geral.getText().equals("")
                || textRG_Geral.getText().equals("")
                || textCPF_Geral.getText().equals("")
                || textLogradouro_Geral.getText().equals("")
                || textCEP_Geral.getText().equals("")
                || textBairro_Geral.getText().equals("")
                || textCidade_Geral.getText().equals("")
                || textUF_Geral.getText().equals("")) {

        } else {
            result = true;
        }
        return result;
    }

    private void limparCamposCadastroCliente() {
        textNome_CadC.setText("");
        textSobrenome_CadC.setText("");
        textRenda_CadC.setText("");
        textRG_CadC.setText("");
        textCPF_CadC.setText("");
    }

    private void limparEnderecoCadastroCliente() {
        textLogradouro_CadC.setText("");
        textNumeroPredial_CadC.setText("");
        textCEP_CadC.setText("");
        textComplemento_CadC.setText("");
        textBairro_CadC.setText("");
        textCidade_CadC.setText("");
        textUF_CadC.setText("");
    }

    private List<Cliente> findCliente(String CPF) {
        List<Cliente> result = new ArrayList();
        for (Cliente C : clientes) {
            if (C.getCpf().contains(CPF)) {
                result.add(C);
            }
        }
        return result;
    }

    private List<Cliente> findClienteComConta() {
        List<Cliente> result = new ArrayList();
        for (Cliente C : clientes) {
            if (C.getConta() != null) {
                result.add(C);
            }
        }
        return result;
    }
    
    private List<Cliente> findClienteSemConta() {
        List<Cliente> result = new ArrayList();
        for (Cliente C : clientes) {
            if (C.getConta() == null) {
                result.add(C);
            }
        }
        return result;
    }

    private List<Cliente> findClienteNome(String nome) {
        List<Cliente> result = new ArrayList();
        for (Cliente C : clientes) {
            if (C.getNome().contains(nome)) {
                result.add(C);
            }
        }
        return result;
    }

    private List<Cliente> findClienteSobrenome(String sobrenome) {
        List<Cliente> result = new ArrayList();
        for (Cliente C : clientes) {
            if (C.getSobrenome().contains(sobrenome)) {
                result.add(C);
            }
        }
        return result;
    }

    private List<Cliente> findClienteRG(String RG) {
        List<Cliente> result = new ArrayList();
        for (Cliente C : clientes) {
            if (C.getRg().contains(RG)) {
                result.add(C);
            }
        }
        return result;
    }

    private Endereco findEndereco(String CEP) {
        Endereco result = null;
        for (Endereco E : enderecos) {
            if (E.getCep().equals(CEP)) {
                result = E;
                break;
            }
        }
        return result;
    }

    private void gravaEndereco(Endereco end) {
        boolean found = false;
        for (Endereco E : enderecos) {
            if (E.equals(end)) {
                found = true;
                break;
            }

        }
        if (found == false) {
            enderecos.add(end);
        }
    }

    private Endereco montaEnderecoTemp() {
        String logradouro = textLogradouro_CadC.getText();
        String cep = textCEP_CadC.getText();
        String bairro = textBairro_CadC.getText();
        String cidade = textCidade_CadC.getText();
        String uf = textUF_CadC.getText();
        Endereco temp = new Endereco(cep, logradouro, bairro, cidade, uf);
        return temp;
    }

    private void gravaEnderecoCliente(Cliente cliente, Endereco endereco) {
        gravaEndereco(endereco);
        int numero = Integer.parseInt(textNumeroPredial_CadC.getText());
        String complemento = textComplemento_CadC.getText();
        EnderecoCliente endcli = new EnderecoCliente(endereco.getCep(), endereco.getLogradouro(), endereco.getBairro(), endereco.getCidade(), endereco.getUf(), numero, complemento);
        cliente.setEndereco(endcli);
        limparEnderecoCadastroCliente();

    }

    private void gravaEnderecoClienteGeral(Cliente cliente, Endereco endereco) {
        gravaEndereco(endereco);
        int numero = Integer.parseInt(textNumeroPredial_Geral.getText());
        String complemento = textComplemento_Geral.getText();
        EnderecoCliente endcli = new EnderecoCliente(endereco.getCep(), endereco.getLogradouro(), endereco.getBairro(), endereco.getCidade(), endereco.getUf(), numero, complemento);
        cliente.setEndereco(endcli);

    }

    private Cliente cadastraCliente() {
        String nome = textNome_CadC.getText();
        String sobrenome = textSobrenome_CadC.getText();
        double renda = Double.parseDouble(textRenda_CadC.getText());
        String rg = textRG_CadC.getText();
        String cpf = textCPF_CadC.getText();
        setIdCliente++;
        Cliente cliente = new Cliente(nome, sobrenome, renda, rg, cpf, setIdCliente);
        clientes.add(cliente);
        clienteTableModel.setListaClientes(clientes);
        limparCamposCadastroCliente();
        return cliente;
    }

    private void popula() {
        textNome_CadC.setText("JOAO");
        textSobrenome_CadC.setText("ROMERO DA SILVA");
        textRenda_CadC.setText("1500.00");
        textRG_CadC.setText("430084869");
        textCPF_CadC.setText("32212862954");
        textLogradouro_CadC.setText("RUA LUIZ HAVRO");
        textNumeroPredial_CadC.setText("100");
        textCEP_CadC.setText("82640560");
        textComplemento_CadC.setText("A");
        textBairro_CadC.setText("SANTA CÂNDIDA");
        textCidade_CadC.setText("CURITIBA");
        textUF_CadC.setText("PR");
        cadastraClienteCompleto();
        textNome_CadC.setText("MARIA");
        textSobrenome_CadC.setText("RIBEIRO ANDRADE");
        textRenda_CadC.setText("2500.00");
        textRG_CadC.setText("259024752");
        textCPF_CadC.setText("59035986920");
        textLogradouro_CadC.setText("RUA DOMINGOS PIGATTO");
        textNumeroPredial_CadC.setText("267");
        textCEP_CadC.setText("82620170");
        textComplemento_CadC.setText("B");
        textBairro_CadC.setText("TINGUI");
        textCidade_CadC.setText("CURITIBA");
        textUF_CadC.setText("PR");
        cadastraClienteCompleto();
        textNome_CadC.setText("JOSE");
        textSobrenome_CadC.setText("PEREIRA DOS SANTOS");
        textRenda_CadC.setText("3500.00");
        textRG_CadC.setText("261257626");
        textCPF_CadC.setText("66513060907");
        textLogradouro_CadC.setText("RUA MARECHAL DEODORO");
        textNumeroPredial_CadC.setText("87");
        textCEP_CadC.setText("80045090");
        textComplemento_CadC.setText("");
        textBairro_CadC.setText("ALTO DA RUA XV");
        textCidade_CadC.setText("CURITIBA");
        textUF_CadC.setText("PR");
        cadastraClienteCompleto();
        textNome_CadC.setText("ADRIANA");
        textSobrenome_CadC.setText("SCHIMIDT OLINTO");
        textRenda_CadC.setText("4500.00");
        textRG_CadC.setText("449910453");
        textCPF_CadC.setText("87401803950");
        textLogradouro_CadC.setText("TRAVESSA TEIXEIRA DE FREITAS");
        textNumeroPredial_CadC.setText("270");
        textCEP_CadC.setText("80410905");
        textComplemento_CadC.setText("");
        textBairro_CadC.setText("SAO FRANCISCO");
        textCidade_CadC.setText("CURITIBA");
        textUF_CadC.setText("PR");
        cadastraClienteCompleto();
    }

    private void invisibleAcc() {
        panelCC.setVisible(false);
        panelCI.setVisible(false);
    }

    private void visibleCC() {
        panelCC.setVisible(true);
        panelCI.setVisible(false);
    }

    private void visibleCI() {
        panelCI.setVisible(true);
        panelCC.setVisible(false);

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SistemaBancario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SistemaBancario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SistemaBancario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SistemaBancario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SistemaBancario().setVisible(true);

            }

        });

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel CadC;
    private javax.swing.JPanel Clientes;
    private javax.swing.JScrollPane Clientes_Geral;
    private javax.swing.JTable TabelaClienteGeral;
    private javax.swing.JTable TabelaClienteOperar;
    private javax.swing.JTable TabelaVincularClientes;
    private javax.swing.JComboBox<String> boxClassificar;
    private javax.swing.JButton btnAtualizar;
    private javax.swing.JButton btnBuscaCEP;
    private javax.swing.JButton btnBuscaCEP_Geral;
    private javax.swing.JButton btnCadastrar_CadC;
    private javax.swing.JButton btnDepositar;
    private javax.swing.JButton btnLimpaPesqMov;
    private javax.swing.JButton btnLimparEnd_CadC;
    private javax.swing.JButton btnLimparEnd_Geral;
    private javax.swing.JButton btnLimparNome_CadC;
    private javax.swing.JButton btnLimparPesquisaAtCnt;
    private javax.swing.JButton btnRemoverCliente;
    private javax.swing.JButton btnRemunerar;
    private javax.swing.JButton btnSacar;
    private javax.swing.JButton btnVincularClienteConta;
    private javax.swing.JComboBox<String> cmbTipoConta;
    private javax.swing.JComboBox<String> comboPesquisarPor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labeBairro_CadC;
    private javax.swing.JLabel labeBairro_Geral;
    private javax.swing.JLabel labelCEP_CadC;
    private javax.swing.JLabel labelCEP_Geral;
    private javax.swing.JLabel labelCPF_CadC;
    private javax.swing.JLabel labelCPF_Geral;
    private javax.swing.JLabel labelCidade_CadC;
    private javax.swing.JLabel labelCidade_Geral;
    private javax.swing.JLabel labelClassificar;
    private javax.swing.JLabel labelComplemento_CadC;
    private javax.swing.JLabel labelComplemento_Geral;
    private javax.swing.JLabel labelDadosPessoaisTit_Cadc;
    private javax.swing.JLabel labelDadosPessoaisTit_Geral;
    private javax.swing.JLabel labelDepInicCC;
    private javax.swing.JLabel labelDepInicCI;
    private javax.swing.JLabel labelDepMinCI;
    private javax.swing.JLabel labelEnderecoTit_CadC;
    private javax.swing.JLabel labelEnderecoTit_Geral;
    private javax.swing.JLabel labelLimiteCC;
    private javax.swing.JLabel labelListaClientes;
    private javax.swing.JLabel labelLogradouro_CadC;
    private javax.swing.JLabel labelLogradouro_Geral;
    private javax.swing.JLabel labelMontMinCI;
    private javax.swing.JLabel labelNome_Cadc;
    private javax.swing.JLabel labelNome_Geral;
    private javax.swing.JLabel labelNumeroPredial_CadC;
    private javax.swing.JLabel labelNumeroPredial_Geral;
    private javax.swing.JLabel labelOp;
    private javax.swing.JLabel labelOp1;
    private javax.swing.JLabel labelOp2;
    private javax.swing.JLabel labelPesquisar;
    private javax.swing.JLabel labelRG_Cadc;
    private javax.swing.JLabel labelRG_Geral;
    private javax.swing.JLabel labelRenda_CadC;
    private javax.swing.JLabel labelRenda_Geral;
    private javax.swing.JLabel labelSobrenome_Cadc;
    private javax.swing.JLabel labelSobrenome_Geral;
    private javax.swing.JLabel labelUF_CadC;
    private javax.swing.JLabel labelUF_Geral;
    private javax.swing.JPanel panelCC;
    private javax.swing.JPanel panelCI;
    private javax.swing.JTabbedPane panelGeral;
    private javax.swing.JTabbedPane panelManterClientes;
    private javax.swing.JTabbedPane panelOperarConta;
    private javax.swing.JTabbedPane panelVincularCliente;
    private javax.swing.JLabel resultOp;
    private javax.swing.JLabel resultOp1;
    private javax.swing.JLabel resultOp2;
    private javax.swing.JLabel resultValidaCPF_CadC;
    private javax.swing.JTextField textBairro_CadC;
    private javax.swing.JTextField textBairro_Geral;
    private javax.swing.JTextField textCEP_CadC;
    private javax.swing.JTextField textCEP_Geral;
    private javax.swing.JTextField textCPF_CadC;
    private javax.swing.JTextField textCPF_Geral;
    private javax.swing.JTextField textCidade_CadC;
    private javax.swing.JTextField textCidade_Geral;
    private javax.swing.JTextField textComplemento_CadC;
    private javax.swing.JTextField textComplemento_Geral;
    private javax.swing.JTextField textDepInicCC;
    private javax.swing.JTextField textDepInicCI;
    private javax.swing.JTextField textDepMinCI;
    private javax.swing.JTextField textDepositar;
    private javax.swing.JTextField textLimiteCC;
    private javax.swing.JTextField textLogradouro_CadC;
    private javax.swing.JTextField textLogradouro_Geral;
    private javax.swing.JTextField textMontMinCI;
    private javax.swing.JTextField textNome_CadC;
    private javax.swing.JTextField textNome_Geral;
    private javax.swing.JTextField textNumeroPredial_CadC;
    private javax.swing.JTextField textNumeroPredial_Geral;
    private javax.swing.JTextField textRG_CadC;
    private javax.swing.JTextField textRG_Geral;
    private javax.swing.JLabel textRecebeCPF;
    private javax.swing.JLabel textRecebeConta;
    private javax.swing.JLabel textRecebeNome;
    private javax.swing.JLabel textRecebeSaldo;
    private javax.swing.JTextField textRenda_CadC;
    private javax.swing.JTextField textRenda_Geral;
    private javax.swing.JTextField textSacar;
    private javax.swing.JTextField textSobrenome_CadC;
    private javax.swing.JTextField textSobrenome_Geral;
    private javax.swing.JTextField textUF_CadC;
    private javax.swing.JTextField textUF_Geral;
    private javax.swing.JTextField txtPesquisar;
    private javax.swing.JTextField txtPesquisarCPF;
    private javax.swing.JTextField txtPesquisarCPFOperar;
    // End of variables declaration//GEN-END:variables

}
